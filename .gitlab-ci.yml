stages:
  - test
  - combine_results
  - graph_results

run_test_program_python_quick:
  stage: test
  parallel:
    matrix:
      - algorithms:
        - "vi"
        - "pi"
        - "smt"
        - "svi"
        - "gsvi"
        - "ovi"
        - "ii"
  resource_group: lock
  image: python
  script:
    - pip install -r requirements.txt
    - python src/model_checker/test.py --modest-path "modest" --algorithms $algorithms --timeout 10

run_test_program_python_parallel:
  stage: test
  parallel:
    matrix:
      - algorithms: 
        - "vi"
        - "pi"
        - "smt"
        - "svi"
        - "gsvi"
        - "ovi"
        - "ii"
        # only:
        # - "beb"
        # - "blocksworld"
        # - "cdrive"
        # - "consensus"
        # - "csma"
        # - "eajs"
        # - "echoring"
        # - "elevators"
        # - "exploding-blocksworld"
        # - "firewire"
        # - "firewire_abst"
        # - "firewire_dl"
        # - "pacman"
        # - "philosophers-mdp"
        # - "pnueli-zuck"
        # - "rabin"
        # - "rectangle-tireworld"
        # - "tireworld"
        # - "triangle-tireworld"
        # - "wlan"
        # - "wlan_dl"
        # - "zenotravel"
        # - "zeroconf"
        # - "zeroconf_dl"
  resource_group: lock
  image: python
  script:
    - echo "Running tests for $algorithms with only $only"
    - pip install -r requirements.txt
    - mkdir -p results
    - python src/model_checker/test.py --modest-path "modest" --algorithms $algorithms --timeout 100 --output results/$algorithms.json
  artifacts:
    paths:
      - results/**

combine_results:
  image: python
  stage: combine_results
  script:
    - python combine_results.py
  artifacts:
    paths:
      - results/**

graph_results:
  image: python
  stage: graph_results
  script:
    - pip install -r requirements.txt
    - python graph_results.py
    - python gen_table.py
  artifacts:
    paths:
      - results/**
